module examples.web.db exposing (getUser, addUser, getAllUsers, updateUser, deleteUser);

use examples.web.types (User);
use hash;
use string;

let mut users_db: Hash<String, User> = {
  "1": User("Ana", "admin"),
  "2": User("Bruno", "user")
};
let mut next_user_id: Integer = 3;

let getUser = fn(id: String) -> Result<User, String> {
    match hash.get(users_db, id) {
        Ok(user) => Ok(user),
        Err(_) => Err("User not found")
    }
};

let getAllUsers = () => users_db;

let addUser = fn(user: User) -> String {
  let newId = strFormat("{?}", next_user_id);
  hash.set(users_db, newId, user);
  next_user_id += 1;
  newId
};

let updateUser = fn(id: String, user: User) -> Result<Null, String> {
    match hash.get(users_db, id) {
        Err(_) => Err("User not found"),
        Ok(_) => {
            hash.set(users_db, id, user);
            Ok(NULL)
        }
    }
};

let deleteUser = fn(id: String) -> Result<Null, String> {
    match hash.get(users_db, id) {
        Err(_) => Err("User not found"),
        Ok(_) => {
            hash.delete(users_db, id);
            Ok(NULL)
        }
    }
};