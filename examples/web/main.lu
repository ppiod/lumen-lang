use net.http (get, post, put, delete, listen, json, html, Response);
use string;
use examples.web.db (getUser, getAllUsers);
use examples.web.services (createUser, handleUserUpdate, handleDelete);

get("/", (req, params) => html("<h1>Welcome to the Lumen API!</h1>"));

get("/users", (req, params) => json(getAllUsers()));

get("/users/:id", (req, params) => {
  let userId = params["id"];
  match getUser(userId) {
    Ok(user) => json(user),
    Err(msg) => Response(404, strFormat("User not found: {?}", msg), {})
  }
});

post("/users", (req, params) => {
  match createUser(req.body) {
    Ok(successResponse) => successResponse,
    Err(errorResponse) => errorResponse
  }
});

put("/users/:id", (req, params) => {
  let userId = params["id"];
  match handleUserUpdate(userId, req.body) {
      Ok(res) => res,
      Err(errRes) => errRes
  }
});

delete("/users/:id", (req, params) => {
    let userId = params["id"];
    handleDelete(userId)
});

listen(8080, () => {
  writeln("Server is running at http://localhost:8080");
});